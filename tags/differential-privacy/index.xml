<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Differential Privacy on Bargav Jayaraman</title>
    <link>https://bargavjayaraman.github.io/tags/differential-privacy/</link>
    <description>Recent content in Differential Privacy on Bargav Jayaraman</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://bargavjayaraman.github.io/tags/differential-privacy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why you should evaluate your private model</title>
      <link>https://bargavjayaraman.github.io/post/evaluating-dpml-intro/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bargavjayaraman.github.io/post/evaluating-dpml-intro/</guid>
      <description>

&lt;p&gt;Privacy concerns arise when training machine learning models over sensitive data such as personal information about individuals. These concerns become more serious when the trained models are publicly deployed as a service. While differential privacy can alleviate these privacy concerns, it is highly sensitive to the implementation choices such as the privacy budget and the type of differential privacy relaxation used. In our paper (to appear in USENIX Security’19), we experimentally evaluate the impact of these implementation choices on the privacy leakage. More concretely, we quantify how much information is leaked to the adversary.&lt;/p&gt;

&lt;p&gt;The following fictional scenario illustrates the privacy concerns and the risks involved in publicly deploying models without properly analysing the differential privacy implementation choices.&lt;/p&gt;

&lt;h1 id=&#34;the-quickservice-bank-scenario&#34;&gt;The QuickService Bank Scenario&lt;/h1&gt;

&lt;p&gt;When you go to a bank for a personal loan, the approval process often takes &lt;a href=&#34;https://studentloanhero.com/featured/how-long-does-it-take-to-get-approved-for-a-personal-loan/&#34; target=&#34;_blank&#34;&gt;from a day or two to a couple of weeks&lt;/a&gt;. However the QuickService Bank, living up to its name, launched an online service where you could enter your personal details and get an instant loan approval. The workhorse behind this quick service is their state-of-the-art machine learning model trained on the bank’s existing customer data.&lt;/p&gt;







&lt;figure&gt;

&lt;img src=&#34;img/quickservicebank_scenario.png&#34; &gt;


&lt;/figure&gt;


&lt;h2 id=&#34;what-went-wrong&#34;&gt;What went wrong?&lt;/h2&gt;

&lt;p&gt;The online loan approval service earned great popularity and brought in more business for QuickService Bank. But the bank’s joy didn’t last for long. Mandark, a notorious black-hat hacker, prowled on the online service and started leaking the identity of the bank’s customers. This type of attack is called &lt;a href=&#34;https://ieeexplore.ieee.org/document/7958568&#34; target=&#34;_blank&#34;&gt;membership inference&lt;/a&gt; where the attacker identifies the presence or absence of a record in the training data.






&lt;figure&gt;

&lt;img src=&#34;img/mandark_attack.png&#34; &gt;


&lt;/figure&gt;
&lt;/p&gt;

&lt;h2 id=&#34;differential-privacy-to-the-rescue&#34;&gt;Differential privacy to the rescue!&lt;/h2&gt;

&lt;p&gt;Dismayed by the attack, QuickService Bank temporarily disabled the online service and hired Dexter who is a security expert. Dexter learns about &lt;a href=&#34;https://www.microsoft.com/en-us/research/publication/differential-privacy/?from=http%3A%2F%2Fresearch.microsoft.com%2Fpubs%2F64346%2Fdwork.pdf&#34;&gt;differential privacy&lt;/a&gt; and decides to deploy it for privately training the bank’s loan approval model while still prioritizing the model’s accuracy. But due to the model’s complexity, the required privacy budget turned out to be 1000.






&lt;figure&gt;

&lt;img src=&#34;img/dexter_dp.png&#34; &gt;


&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;





&lt;figure&gt;

&lt;img src=&#34;img/dexter_rdp.png&#34; &gt;


&lt;/figure&gt;

Dexter, knowing that such a high budget might not be desirable for strong privacy, uses relaxed definitions (&lt;a href=&#34;https://arxiv.org/abs/1603.01887&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;https://arxiv.org/abs/1605.02065&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://arxiv.org/abs/1702.07476&#34;&gt;here&lt;/a&gt;) to reduce the budget to 10 without compromising on the model accuracy. Happy with his privacy implementation, Dexter asked QuickService Bank to make the service online again.&lt;/p&gt;

&lt;h2 id=&#34;again-what-went-wrong&#34;&gt;Again… what went wrong?&lt;/h2&gt;

&lt;p&gt;Though the differential privacy safeguard reduced Mandark’s attack success rate, he was still able to reveal the membership information of a few bank customers. Why did this happen? While the relaxed definitions allows the reduction in privacy budget, the amount of noise added in the model training remains the same. Thus, the effective privacy is the same as provided by differential privacy with high privacy budget.&lt;/p&gt;

&lt;p&gt;In the next post, we will further explore this observation through empirical evaluation on real world data sets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Analysis of Private ML Models</title>
      <link>https://bargavjayaraman.github.io/project/evaluating-dpml/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bargavjayaraman.github.io/project/evaluating-dpml/</guid>
      <description>&lt;p&gt;Machine learning models are being extensively trained on sensitive human data (such as pictures, videos and patient health records) and are being publicly deployed as a service. With such systems in  place, privacy of the individuals involved in the model training becomes a real concern. While differential privacy provides a solution to this problem, there is always a privacy-utility trade-off when training models privately, which is not well understood. Often the practical deployments choose the model utility over privacy, that may lead to indiscernable privacy vulnerabilities. One such example of privacy vulnerability is whether an adversary can identify a particular individual in the training data. Also, what type of individuals are more vulnerable to such attacks? This question is also directly related to the problem of fairness. In light of such vulnerabilities, what privacy parameters should the ML deployments use to mitigate the risks? Our project tries to shed light on these questions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Preserving Machine Learning</title>
      <link>https://bargavjayaraman.github.io/project/ppml/</link>
      <pubDate>Sat, 03 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bargavjayaraman.github.io/project/ppml/</guid>
      <description>&lt;p&gt;Multi-party computation protocols provide computational security to both data and model through encrypted computations. Differential privacy, on the other hand, provides information theoretic privacy by perturbing the computations with noise. These techniques consider a different threat model and have orthogonal goals. In this project, we combine both technuqies to achieve strong security and privacy for machine learning on sensitive data.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
